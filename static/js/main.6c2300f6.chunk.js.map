{"version":3,"sources":["components/Timer.js","components/Buddy.js","components/Ticker.js","components/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","React","PureComponent","Component","state","minutes","seconds","start","setState","startOnClick","clearInterval","ticker","step","props","setInterval","stopOnlick","console","log","this","onClick","Clock","open","toggle","bind","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAEaA,GCA4BC,IAAMC,cCCJD,IAAME,UFD/B,4MACXC,MAAQ,CACHC,QAAS,EACTC,QAAS,EAETC,OAAM,GALA,EAOdA,MAAQ,WACD,EAAKH,MAAMG,MACV,EAAKC,SAAU,CAACD,OAAM,IACnB,EAAKC,SAAU,CAACD,OAAM,KAVnB,EAedE,aAAe,WACX,GAAI,EAAKL,MAAMG,MACXG,cAAe,EAAKC,QACpB,EAAKH,SAAU,CAACD,OAAO,QACpB,CACH,IAAMK,EAAuB,IAAhB,EAAKC,MAAMD,KACxB,EAAKD,OAASG,aAAc,WAAK,IAAD,EACF,EAAKV,MAAxBE,EADqB,EACrBA,QAAQD,EADa,EACbA,QACXC,EAAQ,GACR,EAAKE,UAAU,kBAAc,CAACF,QAAf,EAAEA,QAA6B,MAEpC,IAAVA,IACgB,IAAZD,EACAK,cAAe,EAAKC,QAEpB,EAAKH,UAAU,kBAAc,CAACH,QAAf,EAAEA,QAA6B,EAAGC,QAAQ,UAGvEM,KAjCQ,EAoCdG,WAAa,WACTL,cAAe,EAAKC,QACpBK,QAAQC,IAAK,YAAa,EAAKb,MAAMC,QAAS,IAAK,EAAKD,MAAME,QAAS,GAApB,WAA4B,EAAKF,MAAME,SAAW,EAAKF,MAAME,UAtCtG,uDAyCd,cAzCc,oBA+Cd,WAAU,IAAD,EACoBY,KAAKd,MAAvBC,EADF,EACEA,QAAQC,EADV,EACUA,QACf,OACI,gCACI,mDAAsBD,EAAtB,MAAkCC,EAAQ,GAAR,WAAgBA,GAAWA,KAC7D,wBAAQa,QAASD,KAAKT,aAAtB,mBACA,wBAAQU,QAASD,KAAKH,WAAtB,yBArDE,GAAuBd,IAAME,YGMlCiB,G,KAAK,kDACd,WAAaP,GAAO,IAAD,8BACf,cAAMA,IAEDT,MAAQ,CACTiB,MAAM,GAEV,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBANC,EADL,0CAYd,WACIL,KAAKV,UAAS,kBAAa,CACvBa,MADU,EAAEA,WAbN,oBAiBd,WAAU,IACEA,EAASH,KAAKd,MAAdiB,KACR,OACI,gCACI,yBAAQF,QAASD,KAAKI,OAAtB,UAA+BD,EAAO,QAAQ,OAA9C,YAKA,cAAC,EAAD,CAAOT,KAAO,WA1BZ,GAAuBX,IAAME,YCOhCqB,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c2300f6.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport const Timer = class Timer extends React.Component {\r\n       state = {\r\n            minutes: 0,\r\n            seconds: 5,\r\n            \r\n            start:false,\r\n        }\r\n    start = () =>{\r\n        if(this.state.start){\r\n            this.setState ({start:false})\r\n        }else (this.setState ({start:true}))\r\n    }\r\n\r\n  \r\n\r\n    startOnClick = () => {\r\n        if (this.state.start){\r\n            clearInterval (this.ticker);\r\n            this.setState ({start: false})\r\n        } else {\r\n            const step = this.props.step*1000;\r\n            this.ticker = setInterval ( ()=>{ \r\n                const {seconds,minutes} = this.state\r\n                if (seconds>0){\r\n                    this.setState (({seconds})=>({seconds:seconds-1}))\r\n                }  \r\n                if (seconds===0){\r\n                    if (minutes === 0){\r\n                        clearInterval (this.ticker)\r\n                    }else {\r\n                        this.setState (({minutes})=>({minutes:minutes-1, seconds:59}))\r\n                    }\r\n                }\r\n        },step)\r\n    }\r\n}\r\n    stopOnlick = () => {\r\n        clearInterval (this.ticker) \r\n        console.log ('time left', this.state.minutes, ':', this.state.seconds <10? `0${this.state.seconds}`: this.state.seconds)\r\n    }\r\n\r\n    componentDidMount (){\r\n    \r\n    }\r\n\r\n\r\n\r\n    render (){\r\n        const {minutes,seconds}= this.state\r\n        return (\r\n            <div>\r\n                <time>Time remaining {minutes} : {seconds<10? `0${seconds}`: seconds}</time>\r\n                <button onClick={this.startOnClick}>Start</button>\r\n                <button onClick={this.stopOnlick}>Stop</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport const Buddy = class Buddy extends React.PureComponent{\r\n    render (){\r\n        console.log ('render Buddy')\r\n        return(\r\n            <div>Hello, I'm your buddy. My name is {this.props.name}</div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Ticker = class Ticker extends React.Component {\r\n    constructor (props){\r\n        super (props)\r\n\r\n       this.state = {\r\n            date: new Date (),\r\n            time: 50,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount (){\r\n        this.ticker = setInterval ( ()=>{ this.setState ({date: new Date ()}) \r\n        },1000)\r\n    }\r\n\r\n\r\n\r\ncomponentWillUnmount () {\r\n    clearInterval (this.ticker)\r\n}\r\n\r\n\r\n    render () {\r\n        console.log('render ticker')\r\n        return (\r\n            <time>\r\n                {this.state.date.toLocaleTimeString()}\r\n            </time>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Buddy } from \"./Buddy\";\r\nimport { Ticker } from \"./Ticker\";\r\nimport { Timer } from \"./Timer\";\r\nimport { Timer2 } from \"./Timer2\";\r\n\r\n\r\n\r\nexport const Clock = class Clock extends React.Component {\r\n    constructor (props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            open: true\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n\r\n    }\r\n    \r\n    \r\n    toggle () { \r\n        this.setState(({open}) => ({\r\n            open: !open\r\n        }))\r\n    }\r\n    render() {\r\n        const { open } = this.state\r\n        return(\r\n            <div>\r\n                <button onClick={this.toggle}>{open ? 'Close':'Open'} Clock</button>\r\n                {/*<Ticker name = 'New Clock'/> */}\r\n              \r\n\r\n\r\n                <Timer step ={1} />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","\nimport './App.css';\n\nimport { Clock } from './components/Clock';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Curent Time</h1>\n      <Clock />\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}